apply plugin: 'com.android.application'

android {
    useLibrary 'org.apache.http.legacy'
    signingConfigs {
        PunuoClient {
            keyAlias 'hangzhoupunuokeystore'
            keyPassword '123456'
            storeFile file('../hangzhoupunuo.jks')
            storePassword '123456'
        }
    }
    compileSdkVersion gradle.sdk.compileSdkVersion
    buildToolsVersion gradle.sdk.buildToolsVersion
    defaultConfig {
        multiDexEnabled true
        applicationId gradle.sdk.packageName
        minSdkVersion gradle.sdk.minSdkVersion
        targetSdkVersion gradle.sdk.targetSdkVersion
        versionCode gradle.sdk.versionCode
        versionName gradle.sdk.versionName
        ndk {
            moduleName "serial_port"
            ldLibs "log"
            abiFilters "armeabi","x86"
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.PunuoClient
        }
        debug {
            signingConfig signingConfigs.PunuoClient
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    repositories {
        flatDir {
            dirs project(':pn_sdk').file('libs')
        }
    }
    productFlavors {

    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }
    applicationVariants.all {
        variant ->
            variant.outputs.all {
                output ->
                    def outputFile = output.outputFile
                    if (outputFile.name.contains("release")) {
                        def fileName = "rlph_app.apk"
                        outputFileName = new File("../release/", fileName)
                    } else if (outputFile.name.contains("debug")) {
                        def fileName = "rlph_app.apk"
                        outputFileName = new File("../debug/", fileName)
                    }
            }
    }
}

dependencies {
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(':pn_sdk')
    implementation project(':wheelpicker')
    implementation 'com.android.support:appcompat-v7:23.4.0'
    api 'com.tencent.mm.opensdk:wechat-sdk-android-with-mta:5.3.1'
    api 'com.jakewharton:butterknife:7.0.1'
    annotationProcessor 'com.jakewharton:butterknife:7.0.1'
    api 'io.reactivex:rxjava:1.1.0'
    api 'io.reactivex:rxandroid:1.1.0'
    //PushSDK必须依赖基础组件库，所以需要加入对应依赖
    api 'com.umeng.umsdk:common:1.5.4'
    //PushSDK必须依赖utdid库，所以需要加入对应依赖
    api 'com.umeng.umsdk:utdid:1.1.5.3'
    //PushSDK
    api 'com.umeng.umsdk:push:5.0.2'
}
